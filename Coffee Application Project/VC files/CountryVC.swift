//
//  CountryVC.swift
//  Coffee Application Project
//
//  Created by iPHTech 26 on 06/05/25.
//

import UIKit


//Define the protocal
protocol CountrySelectionDelegate: AnyObject {
    func didSelectCountry(_ country: String)
}

struct CountryResponse: Codable {
    let data: [Book]
}

struct Book: Codable {
    let name: String
    let dial_code: String
    let code: String
}


class CountryVC: UIViewController ,UITableViewDelegate,UITableViewDataSource {

    weak var delegate: CountrySelectionDelegate?
    
//    let countries = [
//        "ðŸ‡¦ðŸ‡« AFG +93", "ðŸ‡¦ðŸ‡± ALB +355", "ðŸ‡©ðŸ‡¿ DZA +213", "ðŸ‡¦ðŸ‡© AND +376", "ðŸ‡¦ðŸ‡´ AGO +244", "ðŸ‡¦ðŸ‡¬ ATG +1-268", "ðŸ‡¦ðŸ‡· ARG +54", "ðŸ‡¦ðŸ‡² ARM +374",
//           "ðŸ‡¦ðŸ‡º AUS +61", "ðŸ‡¦ðŸ‡¹ AUT +43", "ðŸ‡¦ðŸ‡¿ AZE +994", "ðŸ‡§ðŸ‡¸ BHS +1-242", "ðŸ‡§ðŸ‡­ BHR +973", "ðŸ‡§ðŸ‡© BGD +880", "ðŸ‡§ðŸ‡§ BRB +1-246", "ðŸ‡§ðŸ‡¾ BLR +375",
//           "ðŸ‡§ðŸ‡ª BEL +32", "ðŸ‡§ðŸ‡¿ BLZ +501", "ðŸ‡§ðŸ‡¯ BEN +229", "ðŸ‡§ðŸ‡¹ BTN +975", "ðŸ‡§ðŸ‡´ BOL +591", "ðŸ‡§ðŸ‡¦ BIH +387", "ðŸ‡§ðŸ‡¼ BWA +267", "ðŸ‡§ðŸ‡· BRA +55",
//           "ðŸ‡§ðŸ‡³ BRN +673", "ðŸ‡§ðŸ‡¬ BGR +359", "ðŸ‡§ðŸ‡« BFA +226", "ðŸ‡§ðŸ‡® BDI +257", "ðŸ‡¨ðŸ‡» CPV +238", "ðŸ‡°ðŸ‡­ KHM +855", "ðŸ‡¨ðŸ‡² CMR +237", "ðŸ‡¨ðŸ‡¦ CAN +1",
//           "ðŸ‡¨ðŸ‡« CAF +236", "ðŸ‡¹ðŸ‡© TCD +235", "ðŸ‡¨ðŸ‡± CHL +56", "ðŸ‡¨ðŸ‡³ CHN +86", "ðŸ‡¨ðŸ‡´ COL +57", "ðŸ‡°ðŸ‡² COM +269", "ðŸ‡¨ðŸ‡¬ COG +242", "ðŸ‡¨ðŸ‡· CRI +506",
//           "ðŸ‡­ðŸ‡· HRV +385", "ðŸ‡¨ðŸ‡º CUB +53", "ðŸ‡¨ðŸ‡¾ CYP +357", "ðŸ‡¨ðŸ‡¿ CZE +420", "ðŸ‡¨ðŸ‡© COD +243", "ðŸ‡©ðŸ‡° DNK +45", "ðŸ‡©ðŸ‡¯ DJI +253", "ðŸ‡©ðŸ‡² DMA +1-767",
//           "ðŸ‡©ðŸ‡´ DOM +1-809", "ðŸ‡ªðŸ‡¨ ECU +593", "ðŸ‡ªðŸ‡¬ EGY +20", "ðŸ‡¸ðŸ‡» SLV +503", "ðŸ‡¬ðŸ‡¶ GNQ +240", "ðŸ‡ªðŸ‡· ERI +291", "ðŸ‡ªðŸ‡ª EST +372", "ðŸ‡¸ðŸ‡¿ SWZ +268",
//           "ðŸ‡ªðŸ‡¹ ETH +251", "ðŸ‡«ðŸ‡¯ FJI +679", "ðŸ‡«ðŸ‡® FIN +358", "ðŸ‡«ðŸ‡· FRA +33", "ðŸ‡¬ðŸ‡¦ GAB +241", "ðŸ‡¬ðŸ‡² GMB +220", "ðŸ‡¬ðŸ‡ª GEO +995", "ðŸ‡©ðŸ‡ª DEU +49",
//           "ðŸ‡¬ðŸ‡­ GHA +233", "ðŸ‡¬ðŸ‡· GRC +30", "ðŸ‡¬ðŸ‡© GRD +1-473", "ðŸ‡¬ðŸ‡¹ GTM +502", "ðŸ‡¬ðŸ‡³ GIN +224", "ðŸ‡¬ðŸ‡¼ GNB +245", "ðŸ‡¬ðŸ‡¾ GUY +592", "ðŸ‡­ðŸ‡¹ HTI +509",
//           "ðŸ‡­ðŸ‡³ HND +504", "ðŸ‡­ðŸ‡º HUN +36", "ðŸ‡®ðŸ‡¸ ISL +354", "ðŸ‡®ðŸ‡³ IND +91", "ðŸ‡®ðŸ‡© IDN +62", "ðŸ‡®ðŸ‡· IRN +98", "ðŸ‡®ðŸ‡¶ IRQ +964", "ðŸ‡®ðŸ‡ª IRL +353",
//           "ðŸ‡®ðŸ‡± ISR +972", "ðŸ‡®ðŸ‡¹ ITA +39", "ðŸ‡¯ðŸ‡² JAM +1-876", "ðŸ‡¯ðŸ‡µ JPN +81", "ðŸ‡¯ðŸ‡´ JOR +962", "ðŸ‡°ðŸ‡¿ KAZ +7", "ðŸ‡°ðŸ‡ª KEN +254", "ðŸ‡°ðŸ‡® KIR +686",
//           "ðŸ‡°ðŸ‡¼ KWT +965", "ðŸ‡°ðŸ‡¬ KGZ +996", "ðŸ‡±ðŸ‡¦ LAO +856", "ðŸ‡±ðŸ‡» LVA +371", "ðŸ‡±ðŸ‡§ LBN +961", "ðŸ‡±ðŸ‡¸ LSO +266", "ðŸ‡±ðŸ‡· LBR +231", "ðŸ‡±ðŸ‡¾ LBY +218",
//           "ðŸ‡±ðŸ‡® LIE +423", "ðŸ‡±ðŸ‡¹ LTU +370", "ðŸ‡±ðŸ‡º LUX +352", "ðŸ‡²ðŸ‡¬ MDG +261", "ðŸ‡²ðŸ‡¼ MWI +265", "ðŸ‡²ðŸ‡¾ MYS +60", "ðŸ‡²ðŸ‡» MDV +960", "ðŸ‡²ðŸ‡± MLI +223",
//           "ðŸ‡²ðŸ‡¹ MLT +356", "ðŸ‡²ðŸ‡­ MHL +692", "ðŸ‡²ðŸ‡· MRT +222", "ðŸ‡²ðŸ‡º MUS +230", "ðŸ‡²ðŸ‡½ MEX +52", "ðŸ‡«ðŸ‡² FSM +691", "ðŸ‡²ðŸ‡© MDA +373", "ðŸ‡²ðŸ‡¨ MCO +377",
//           "ðŸ‡²ðŸ‡³ MNG +976", "ðŸ‡²ðŸ‡ª MNE +382", "ðŸ‡²ðŸ‡¦ MAR +212", "ðŸ‡²ðŸ‡¿ MOZ +258", "ðŸ‡²ðŸ‡² MMR +95", "ðŸ‡³ðŸ‡¦ NAM +264", "ðŸ‡³ðŸ‡· NRU +674", "ðŸ‡³ðŸ‡µ NPL +977",
//           "ðŸ‡³ðŸ‡± NLD +31", "ðŸ‡³ðŸ‡¿ NZL +64", "ðŸ‡³ðŸ‡® NIC +505", "ðŸ‡³ðŸ‡ª NER +227", "ðŸ‡³ðŸ‡¬ NGA +234", "ðŸ‡°ðŸ‡µ PRK +850", "ðŸ‡²ðŸ‡° MKD +389", "ðŸ‡³ðŸ‡´ NOR +47",
//           "ðŸ‡´ðŸ‡² OMN +968", "ðŸ‡µðŸ‡° PAK +92", "ðŸ‡µðŸ‡¼ PLW +680", "ðŸ‡µðŸ‡¸ PSE +970", "ðŸ‡µðŸ‡¦ PAN +507", "ðŸ‡µðŸ‡¬ PNG +675", "ðŸ‡µðŸ‡¾ PRY +595", "ðŸ‡µðŸ‡ª PER +51",
//           "ðŸ‡µðŸ‡­ PHL +63", "ðŸ‡µðŸ‡± POL +48", "ðŸ‡µðŸ‡¹ PRT +351", "ðŸ‡¶ðŸ‡¦ QAT +974", "ðŸ‡·ðŸ‡´ ROU +40", "ðŸ‡·ðŸ‡º RUS +7", "ðŸ‡·ðŸ‡¼ RWA +250", "ðŸ‡°ðŸ‡³ KNA +1-869",
//           "ðŸ‡±ðŸ‡¨ LCA +1-758", "ðŸ‡»ðŸ‡¨ VCT +1-784", "ðŸ‡¼ðŸ‡¸ WSM +685", "ðŸ‡¸ðŸ‡² SMR +378", "ðŸ‡¸ðŸ‡¹ STP +239", "ðŸ‡¸ðŸ‡¦ SAU +966", "ðŸ‡¸ðŸ‡³ SEN +221",
//           "ðŸ‡·ðŸ‡¸ SRB +381", "ðŸ‡¸ðŸ‡¨ SYC +248", "ðŸ‡¸ðŸ‡± SLE +232", "ðŸ‡¸ðŸ‡¬ SGP +65", "ðŸ‡¸ðŸ‡° SVK +421", "ðŸ‡¸ðŸ‡® SVN +386", "ðŸ‡¸ðŸ‡§ SLB +677", "ðŸ‡¸ðŸ‡´ SOM +252",
//           "ðŸ‡¿ðŸ‡¦ ZAF +27", "ðŸ‡°ðŸ‡· KOR +82", "ðŸ‡¸ðŸ‡¸ SSD +211", "ðŸ‡ªðŸ‡¸ ESP +34", "ðŸ‡±ðŸ‡° LKA +94", "ðŸ‡¸ðŸ‡© SDN +249", "ðŸ‡¸ðŸ‡· SUR +597", "ðŸ‡¸ðŸ‡ª SWE +46",
//           "ðŸ‡¨ðŸ‡­ CHE +41", "ðŸ‡¸ðŸ‡¾ SYR +963", "ðŸ‡¹ðŸ‡¼ TWN +886", "ðŸ‡¹ðŸ‡¯ TJK +992", "ðŸ‡¹ðŸ‡¿ TZA +255", "ðŸ‡¹ðŸ‡­ THA +66", "ðŸ‡¹ðŸ‡¬ TGO +228", "ðŸ‡¹ðŸ‡° TKL +690",
//           "ðŸ‡¹ðŸ‡´ TON +676", "ðŸ‡¹ðŸ‡¹ TTO +1-868", "ðŸ‡¹ðŸ‡³ TUN +216", "ðŸ‡¹ðŸ‡· TUR +90", "ðŸ‡¹ðŸ‡² TKM +993", "ðŸ‡¹ðŸ‡» TUV +688", "ðŸ‡ºðŸ‡¬ UGA +256", "ðŸ‡ºðŸ‡¦ UKR +380",
//           "ðŸ‡¦ðŸ‡ª ARE +971", "ðŸ‡¬ðŸ‡§ GBR +44", "ðŸ‡ºðŸ‡¸ USA +1", "ðŸ‡ºðŸ‡¾ URY +598", "ðŸ‡ºðŸ‡¿ UZB +998", "ðŸ‡»ðŸ‡º VUT +678", "ðŸ‡»ðŸ‡¦ VAT +379", "ðŸ‡»ðŸ‡ª VEN +58",
//           "ðŸ‡»ðŸ‡³ VNM +84", "ðŸ‡¾ðŸ‡ª YEM +967", "ðŸ‡¿ðŸ‡² ZMB +260", "ðŸ‡¿ðŸ‡¼ ZWE +263"
//    ]
    

    
    @IBOutlet weak var TableViewC: UITableView!
    
    var arrList: [Book] = []
    override func viewDidLoad() {
        super.viewDidLoad()

        self.navigationItem.hidesBackButton = true
        // Do any additional setup after loading the view.
        fetchApi()
        setupTable()
    }

}



extension CountryVC{
    
    func setupTable(){
        self.TableViewC.delegate = self
        self.TableViewC.dataSource = self
        
        self.TableViewC.register( UINib(nibName: "CountryViewCell", bundle: nil), forCellReuseIdentifier: "CountryViewCell")
        
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        arrList.count
       }

    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        guard let cell = tableView.dequeueReusableCell(withIdentifier:"CountryViewCell", for: indexPath) as? CountryViewCell else { return UITableViewCell() }
        
        
        let list = arrList[indexPath.row]
        cell.lblCountry.text = list.dial_code
        
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let list = arrList[indexPath.row]
        let selectedCountry = list.dial_code
        delegate?.didSelectCountry(selectedCountry)
        self.dismiss(animated: true, completion: nil)
    }
    
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
          return 60
      }
  
}


extension CountryVC{
    
    
    func fetchApi(){
        
            let url = URL(string: "https://countriesnow.space/api/v0.1/countries/codes")!
        
        let task = URLSession.shared.dataTask(with: url){ (data, response, error) in
            
            if let error = error{
                print("error",error)
                return
            }
            guard let httpRes = response as? HTTPURLResponse, (200...299).contains(httpRes.statusCode) else{
                print("error")
                return
            }
            
            if let data = data {
                do {
//
                    
                 

                    let bookListResponse = try JSONDecoder().decode(CountryResponse.self, from: data)
                    self.arrList = bookListResponse.data
                    
                    print(bookListResponse)
                    //main
                    DispatchQueue.main.async {
                        self.TableViewC.reloadData()
                    }

                } catch {
                    print("Decoding error:", error)
                }
            }
        }
        task.resume()
    }
    
  
}

